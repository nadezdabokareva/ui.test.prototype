plugins {
    id "java"
    id "groovy"
}

wrapper {
    gradleVersion = '8.5'
}

group = "org.example"
version = "1.0-SNAPSHOT"
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

repositories {
    mavenCentral()
}

def allureVersion = '2.25.0'
def aspectJVersion = '1.9.21'

java {
    toolchain {
//        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.compilerArgs.add('-parameters')
}

tasks.register('demoSmoke', Test) {
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat "full"
    }
    useJUnitPlatform {
        includeTags("demoSmoke")
    }
}


configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

dependencies {

    testImplementation 'com.codeborne:selenide:7.3.1'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testCompileOnly'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

    agent "org.aspectj:aspectjweaver:$aspectJVersion"

    testImplementation platform("io.qameta.allure:allure-bom:$allureVersion")
    testImplementation "io.qameta.allure:allure-junit5"

    testImplementation 'org.junit.platform:junit-platform-suite:1.10.1'
    testImplementation 'io.rest-assured:rest-assured:5.2.0'

    testImplementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'
    testImplementation 'javax.xml.bind:jaxb-api:2.2.4'




}

test {
    useJUnitPlatform()
    systemProperty "file.encoding", "utf-8"
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        exceptionFormat "full"
        jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]
    }

    //Это настроит Gradle на автоматическое запуск тестов параллельно, используя все доступные процессоры.
    maxParallelForks = Runtime.runtime.availableProcessors()
}